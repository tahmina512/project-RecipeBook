{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list/shopping-list.service\";\n// to inject one service to another use onjectable decorator\nexport class RecipeService {\n  // private recipes: Recipe[] = [\n  //   new Recipe(\n  //     'Fruit custard',\n  //     'Made with fresh fruits, milk',\n  //     'https://www.vegrecipesofindia.com/wp-content/uploads/2021/11/fruit-custard-4.jpg',\n  //     [\n  //       new Ingredient('mango', 10),\n  //       new Ingredient('Orange', 5),\n  //       new Ingredient('apple', 5),\n  //     ]\n  //   ),\n  //   new Recipe(\n  //     'Fruit Salad',\n  //     'Made with seasonal fruits',\n  //     'https://images.unsplash.com/photo-1564093497595-593b96d80180?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=435&q=80',\n  //     [\n  //       new Ingredient('apple', 5),\n  //       new Ingredient('pomegranate', 1),\n  //       new Ingredient('strawberry', 15),\n  //     ]\n  //   ),\n  // ];\n  // private recipes: Recipe[] = [];\n  constructor(slService) {\n    this.slService = slService;\n    //manage our recipes\n    this.recipesChanged = new Subject();\n  }\n  setRecipes(recipes) {\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n  getRecipes() {\n    return this.recipes.slice();\n  }\n  getRecipe(index) {\n    return this.recipes[index];\n  }\n  addIngredientsToSHoppingList(ingredients) {\n    this.slService.addIngredients(ingredients);\n  }\n  addRecipe(recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n  updateRecipe(index, newRecipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n  deleteRecipe(index) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\nRecipeService.ɵfac = function RecipeService_Factory(t) {\n  return new (t || RecipeService)(i0.ɵɵinject(i1.ShoppingListService));\n};\nRecipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecipeService,\n  factory: RecipeService.ɵfac\n});","map":{"version":3,"names":["Subject","RecipeService","constructor","slService","recipesChanged","setRecipes","recipes","next","slice","getRecipes","getRecipe","index","addIngredientsToSHoppingList","ingredients","addIngredients","addRecipe","recipe","push","updateRecipe","newRecipe","deleteRecipe","splice","i0","ɵɵinject","i1","ShoppingListService","factory","ɵfac"],"sources":["D:\\Angular\\project\\RecipeBook\\ShoppingList-RecipeBook\\src\\app\\recipe\\recipe.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Recipe } from './recipe.model';\r\nimport { Ingredient } from '../shared/ingredient.model';\r\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\r\nimport { Subject } from 'rxjs';\r\n// to inject one service to another use onjectable decorator\r\n@Injectable()\r\nexport class RecipeService {\r\n  //manage our recipes\r\n  recipesChanged = new Subject<Recipe[]>();\r\n\r\n  // private recipes: Recipe[] = [\r\n  //   new Recipe(\r\n  //     'Fruit custard',\r\n  //     'Made with fresh fruits, milk',\r\n  //     'https://www.vegrecipesofindia.com/wp-content/uploads/2021/11/fruit-custard-4.jpg',\r\n  //     [\r\n  //       new Ingredient('mango', 10),\r\n  //       new Ingredient('Orange', 5),\r\n  //       new Ingredient('apple', 5),\r\n  //     ]\r\n  //   ),\r\n  //   new Recipe(\r\n  //     'Fruit Salad',\r\n  //     'Made with seasonal fruits',\r\n  //     'https://images.unsplash.com/photo-1564093497595-593b96d80180?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=435&q=80',\r\n  //     [\r\n  //       new Ingredient('apple', 5),\r\n  //       new Ingredient('pomegranate', 1),\r\n  //       new Ingredient('strawberry', 15),\r\n  //     ]\r\n  //   ),\r\n  // ];\r\n  // private recipes: Recipe[] = [];\r\n  \r\n  constructor(private slService: ShoppingListService) {}\r\n  setRecipes(recipes: Recipe[]) {\r\n    this.recipes = recipes;\r\n    this.recipesChanged.next(this.recipes.slice());\r\n  }\r\n  getRecipes() {\r\n    return this.recipes.slice();\r\n  }\r\n  getRecipe(index: number) {\r\n    return this.recipes[index];\r\n  }\r\n\r\n  addIngredientsToSHoppingList(ingredients: Ingredient[]) {\r\n    this.slService.addIngredients(ingredients);\r\n  }\r\n  addRecipe(recipe: Recipe) {\r\n    this.recipes.push(recipe);\r\n    this.recipesChanged.next(this.recipes.slice());\r\n  }\r\n  updateRecipe(index: number, newRecipe: Recipe) {\r\n    this.recipes[index] = newRecipe;\r\n    this.recipesChanged.next(this.recipes.slice());\r\n  }\r\n  deleteRecipe(index: number) {\r\n    this.recipes.splice(index, 1);\r\n    this.recipesChanged.next(this.recipes.slice());\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,OAAO,QAAQ,MAAM;;;AAC9B;AAEA,OAAM,MAAOC,aAAa;EAIxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,YAAoBC,SAA8B;IAA9B,KAAAA,SAAS,GAATA,SAAS;IA3B7B;IACA,KAAAC,cAAc,GAAG,IAAIJ,OAAO,EAAY;EA0Ba;EACrDK,UAAUA,CAACC,OAAiB;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACF,cAAc,CAACG,IAAI,CAAC,IAAI,CAACD,OAAO,CAACE,KAAK,EAAE,CAAC;EAChD;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACH,OAAO,CAACE,KAAK,EAAE;EAC7B;EACAE,SAASA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACL,OAAO,CAACK,KAAK,CAAC;EAC5B;EAEAC,4BAA4BA,CAACC,WAAyB;IACpD,IAAI,CAACV,SAAS,CAACW,cAAc,CAACD,WAAW,CAAC;EAC5C;EACAE,SAASA,CAACC,MAAc;IACtB,IAAI,CAACV,OAAO,CAACW,IAAI,CAACD,MAAM,CAAC;IACzB,IAAI,CAACZ,cAAc,CAACG,IAAI,CAAC,IAAI,CAACD,OAAO,CAACE,KAAK,EAAE,CAAC;EAChD;EACAU,YAAYA,CAACP,KAAa,EAAEQ,SAAiB;IAC3C,IAAI,CAACb,OAAO,CAACK,KAAK,CAAC,GAAGQ,SAAS;IAC/B,IAAI,CAACf,cAAc,CAACG,IAAI,CAAC,IAAI,CAACD,OAAO,CAACE,KAAK,EAAE,CAAC;EAChD;EACAY,YAAYA,CAACT,KAAa;IACxB,IAAI,CAACL,OAAO,CAACe,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;IAC7B,IAAI,CAACP,cAAc,CAACG,IAAI,CAAC,IAAI,CAACD,OAAO,CAACE,KAAK,EAAE,CAAC;EAChD;;AAtDWP,aAAa,C;mBAAbA,aAAa,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;AAAbxB,aAAa,C;SAAbA,aAAa;EAAAyB,OAAA,EAAbzB,aAAa,CAAA0B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}