{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { take, exhaustMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthInterceptorService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    return this.authService.user.pipe(take(1), exhaustMap(user => {\n      if (!user) {\n        return next.handle(req);\n      }\n      const modifiedReq = req.clone({\n        params: new HttpParams().set('auth', user.token)\n      });\n      return next.handle(modifiedReq);\n    }));\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac\n});","map":{"version":3,"names":["HttpParams","take","exhaustMap","AuthInterceptorService","constructor","authService","intercept","req","next","user","pipe","handle","modifiedReq","clone","params","set","token","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["D:\\Angular\\project\\RecipeBook\\ShoppingList-RecipeBook\\src\\app\\auth\\auth.interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpParams,\r\n} from '@angular/common/http';\r\nimport { take, exhaustMap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      exhaustMap((user) => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        const modifiedReq = req.clone({\r\n          params: new HttpParams().set('auth', user.token),\r\n        });\r\n        return next.handle(modifiedReq);\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AACA,SAIEA,UAAU,QACL,sBAAsB;AAC7B,SAASC,IAAI,EAAEC,UAAU,QAAQ,gBAAgB;;;AAKjD,OAAM,MAAOC,sBAAsB;EACjCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,OAAO,IAAI,CAACH,WAAW,CAACI,IAAI,CAACC,IAAI,CAC/BT,IAAI,CAAC,CAAC,CAAC,EACPC,UAAU,CAAEO,IAAI,IAAI;MAClB,IAAI,CAACA,IAAI,EAAE;QACT,OAAOD,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;MAEzB,MAAMK,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;QAC5BC,MAAM,EAAE,IAAId,UAAU,EAAE,CAACe,GAAG,CAAC,MAAM,EAAEN,IAAI,CAACO,KAAK;OAChD,CAAC;MACF,OAAOR,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC;IACjC,CAAC,CAAC,CACH;EACH;;AAhBWT,sBAAsB,C;mBAAtBA,sBAAsB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAtBjB,sBAAsB,C;SAAtBA,sBAAsB;EAAAkB,OAAA,EAAtBlB,sBAAsB,CAAAmB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}