{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, router) {\n    return this.authService.user.pipe(take(1), map(user => {\n      const isAuth = !!user;\n      if (isAuth) {\n        return true;\n      }\n      return this.router.createUrlTree(['/auth']);\n    }));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","take","AuthGuard","constructor","authService","router","canActivate","route","user","pipe","isAuth","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\project\\RecipeBook\\ShoppingList-RecipeBook\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, take } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Promise<boolean | UrlTree>\r\n    | Observable<boolean | UrlTree> {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      map((user) => {\r\n        const isAuth = !!user;\r\n        if (isAuth) {\r\n          return true;\r\n        }\r\n        return this.router.createUrlTree(['/auth']);\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AASA,SAASA,GAAG,EAAOC,IAAI,QAAQ,gBAAgB;;;;AAK/C,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BF,MAA2B;IAM3B,OAAO,IAAI,CAACD,WAAW,CAACI,IAAI,CAACC,IAAI,CAC/BR,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAAEQ,IAAI,IAAI;MACX,MAAME,MAAM,GAAG,CAAC,CAACF,IAAI;MACrB,IAAIE,MAAM,EAAE;QACV,OAAO,IAAI;;MAEb,OAAO,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC,CACH;EACH;;AArBWT,SAAS,C;mBAATA,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATf,SAAS,C;SAATA,SAAS;EAAAgB,OAAA,EAAThB,SAAS,CAAAiB,IAAA;EAAAC,UAAA,EADI;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}